using UnityEngine;

#if UNITY_EDITOR
using System.IO;
using UnityEditor;
#endif

// -----------------------------------------------------------------
// <SHARED CLASS> This is shared between TerraTech and TTModDesigner
// -----------------------------------------------------------------
[CreateAssetMenu(menuName = "TerraTech/Skin Definition")]
public class ModdedSkinDefinition : ModdedAsset
{
	public string m_Corporation = "GSO";
	public string m_SkinDisplayName = "";
	public Texture2D m_Albedo;
	public Texture2D m_Emissive;
	public Texture2D m_Combined;

	// The skin data in game needs sprites, but given that they are a whole image single packed sprite, we can do that conversion in game
	public Texture2D m_PreviewImage; // TODO: Autogen
	public Texture2D m_SkinButtonImage;

	public bool m_IsCorpDefault = false;
	public TextureSlot m_CorpTextureSlot = TextureSlot.Main;

#if UNITY_EDITOR
	public Texture2D m_Metal;
	public Texture2D m_Smoothness;

	// Generate the combined metallic / smoothness texture if we need to
	public bool GenerateCombinedTextureIfRequired(string baseSkinPathNoExt)
	{
		if(m_Metal != null && m_Smoothness != null && m_Combined == null)
		{
			Texture2D combined = new Texture2D(m_Metal.width, m_Metal.height);
			for (int x = 0; x < m_Metal.width; x++)
			{
				for (int y = 0; y < m_Metal.height; y++)
				{
					combined.SetPixel(x, y, new Color(m_Metal.GetPixel(x, y).r, m_Metal.GetPixel(x, y).r, m_Metal.GetPixel(x, y).r, m_Smoothness.GetPixel(x, y).r));
				}
			}
			
			string assetPath = $"{baseSkinPathNoExt}_autogenerated.tga";
			File.WriteAllBytes(assetPath, ImageConversion.EncodeToTGA(combined));
			m_Combined = AssetDatabase.LoadAssetAtPath<Texture2D>(assetPath);

			return true;
		}

		return false;
	}

	// Return null for success, otherwise return the error string
	public override string VerifyAsset()
	{
		if (m_Corporation.Length == 0)
			return "Invalid corp";
		if (m_Albedo == null)
			return "Albedo unset";
		if (m_Emissive == null)
			return "Emissive unset";
		if (m_Combined == null)
			return "Metallic / Smoothness unset";
		if (m_SkinButtonImage == null)
			return "Icon unset";

		if (!m_Albedo.isReadable)
			return "Albedo unreadable. Right click the texture and click Reimport";
		if (!m_Emissive.isReadable)
			return "Emissive unreadable. Right click the texture and click Reimport";
		if (!m_Combined.isReadable)
			return "Metallic / Smoothness unreadable. Right click the texture and click Reimport";

		if(m_Albedo.width != m_Albedo.height)
		{
			return "Albedo texture not square";
		}

		if (m_Emissive.width != m_Emissive.height)
		{
			return "Emissive texture not square";
		}

		if (m_Combined.width != m_Combined.height)
		{
			return "Metallic / Smoothness texture not square";
		}

		return null;
	}
#endif
}